name: Deploy to neocities

# only run on changes to main. Use main or master depending on whatever your default branch is called.
on: workflow_dispatch

#  push:
#    branches:
#      - main

concurrency: # prevent concurrent deploys doing strange things
  group: deploy-to-neocities
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # The checkout step copies your repo into the action runner. Important!
      - uses: actions/checkout@v4
      - name: Read .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> "$GITHUB_ENV"
      # Set up any tools and build steps here
      # This example uses a Node.js toolchain to build a site
      # If you don't need Node.js to build your site, you can omit this.
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: pnpm/action-setup@v4
      # we're actually getting the env variables from secrets, so this is just to make the build not fail
      - name: Make empty env file
        run: touch .env
      # If you have a different build process, replace this with your own build steps
      - name: Install deps and build
        env:
          LASTFM_API_KEY: ${{ secrets.LASTFM_API_KEY }}
          LASTFM_SECRET: ${{ secrets.LASTFM_SECRET }}
          LASTFM_USER: ${{ secrets.LASTFM_USER }}
        run: |
          pnpm i
          pnpm run build
      - name: Rename 404 page
        run: mv public/not_found/index.html public/not_found.html
      # When the dist_dir is ready, deploy it to neocities
      # Here we deploy the folder named `public`
      - name: Deploy to neocities
        uses: bcomnes/deploy-to-neocities@v3
        with:
          api_key: ${{ secrets.NEOCITIES_API_TOKEN }}
          cleanup: true
          neocities_supporter: false # set this to true if you have a supporter account and want to bypass unsuported files filter.
          preview_before_deploy: true # print a deployment plan prior to waiting for files to upload.
          dist_dir: public
