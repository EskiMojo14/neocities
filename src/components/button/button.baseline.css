button {
  @extend .button;

  appearance: none;
  border: none;
  background: none;
  padding: 0.25rem 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0;
  color: var(--button);
  transition-property: color, background, font-weight, font-variation-settings;
  transition-duration: var(--default-duration);
  border-radius: var(--shape-pill);
  --icon-weight: 300;
  &:hover {
    color: var(--button-hover);
    background: var(--button-hover-background);
    font-weight: var(--weight-semibold);
    font-variation-settings: "slnt" -8;
    --icon-weight: 500;
  }
  &.filled {
    color: var(--button-filled);
    background: var(--button-filled-background);
    &:hover {
      background: var(--button-filled-hover-background);
    }
  }
  &[aria-pressed="true"] {
    --icon-fill: 1;
    color: var(--button-selected);
    background: var(--button-selected-background);
    font-weight: var(--weight-bold);
    font-variation-settings: "slnt" -11;
  }
  &:focus-visible {
    outline: none;
    color: var(--button-focus);
    background: var(--focus-background);
    --icon-weight: 500;
  }
  &.icon {
    padding: 0.5rem;
    @supports (corner-shape: bevel) {
      padding: 0.75rem;
    }
    border-radius: 50%;
  }
}

.button-group {
  display: flex;
  appearance: none;
  margin: 0;
  padding: 0;
  gap: 0;
  border: none;
  /* BUG: overflow: hidden gets round corners even though the element itself gets bevelled ones */
  overflow: hidden;
  button {
    border-radius: 0;
  }
  &:not(.button-group--square) {
    border-radius: var(--shape-pill);
    /* temporary workaround: manually provide border radius for first and last buttons accordingly */
    @supports (corner-shape: bevel) {
      button,
      toggle-button:not(.icon) {
        &:first-of-type label {
          border-top-left-radius: var(--shape-pill);
          border-bottom-left-radius: var(--shape-pill);
          padding-left: var(--button-corner-padding, 1rem);
        }

        &:last-of-type label {
          border-top-right-radius: var(--shape-pill);
          border-bottom-right-radius: var(--shape-pill);
          padding-right: var(--button-corner-padding, 1rem);
        }
      }
      &:dir(rtl) {
        button,
        toggle-button:not(.icon) {
          &:first-of-type label {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            border-top-right-radius: var(--shape-pill);
            border-bottom-right-radius: var(--shape-pill);
            padding-left: 0.5rem;
            padding-right: var(--button-corner-padding, 1rem);
          }
          &:last-of-type label {
            border-top-left-radius: var(--shape-pill);
            border-bottom-left-radius: var(--shape-pill);
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            padding-left: var(--button-corner-padding, 1rem);
            padding-right: 0.5rem;
          }
        }
      }
    }
  }
  &.outlined {
    button,
    toggle-button {
      &:not(:first-of-type) {
        border-left: 1px solid var(--divider);
        &:dir(rtl) {
          border-left: none;
          border-right: 1px solid var(--divider);
        }
      }
    }
    toggle-button.icon {
      border: none;
    }
  }
  &.filled {
    background: var(--button-filled-background);
    button,
    toggle-button {
      background: var(--button-filled-background);
      color: var(--button-filled);
      &:hover {
        background: var(--button-filled-hover-background);
      }
    }
    toggle-button input:not(:checked) + label {
      color: var(--button-filled);
    }
  }
}
